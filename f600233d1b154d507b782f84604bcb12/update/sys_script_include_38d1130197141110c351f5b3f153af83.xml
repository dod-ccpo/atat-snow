<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_g_dis_atat.edaPdsRequest</api_name>
        <caller_access/>
        <client_callable>true</client_callable>
        <description>Makes a GET to the EDA PDS Test Endpoint using mTLS.&#13;
&#13;
When invoking, pass a payload object:&#13;
&#13;
payload: {&#13;
endpoint: string (required),&#13;
contract_number: string (optional),&#13;
delivery_order_number: string (optional)&#13;
}&#13;
</description>
        <name>edaPdsRequest</name>
        <script><![CDATA[function edaPdsRequest(payload){
	try{
		// outbound REST message
		var request = new sn_ws.RESTMessageV2();
		
		// request set-up
		request.setEndpoint(payload.endpoint);
		request.setHttpMethod("get");
		request.setLogLevel("all");
		request.setMutualAuth("mauth");
		
		// add query parameters
		if(payload.contract_number){
			request.setQueryParameter("contractNumber", payload.contract_number);
		}
		if(payload.delivery_order_number){
			request.setQueryParameter("deliveryOrderNumber", payload.delivery_order_number);
		}
		
		// make request
		var response = request.execute();
		// check for errors
		if(response.getStatusCode() != "200" && response.getStatusCode() != "204"){
			gs.error(response.getStatusCode());
			gs.error(response.getBody());
			gs.addErrorMessage("Error: " + response.getStatusCode() + " " + response.getBody());
		}
		var http_payload = {
			body: response.getBody(),
			status_code: response.getStatusCode(),
			headers: response.getAllHeaders(),
		};
		return http_payload;
	}
	catch(error){
		gs.error('Internal SNOW error => ' + error);
		gs.error('Error Stack => ' + error.stack);
		gs.addErrorMessage(error);
	}
}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>zach.clark</sys_created_by>
        <sys_created_on>2022-06-23 20:05:58</sys_created_on>
        <sys_id>38d1130197141110c351f5b3f153af83</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>edaPdsRequest</sys_name>
        <sys_package display_value="ATAT" source="x_g_dis_atat">f600233d1b154d507b782f84604bcb12</sys_package>
        <sys_policy/>
        <sys_scope display_value="ATAT">f600233d1b154d507b782f84604bcb12</sys_scope>
        <sys_update_name>sys_script_include_38d1130197141110c351f5b3f153af83</sys_update_name>
        <sys_updated_by>zach.clark</sys_updated_by>
        <sys_updated_on>2022-07-12 21:00:40</sys_updated_on>
    </sys_script_include>
</record_update>
