<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_g_dis_atat_portfolio</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_g_dis_atat_portfolio">portfolio_viewersVALCHANGES^EQ<item endquery="false" field="portfolio_viewers" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Portfolio Viewer Added</name>
        <order>0</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous) {
    const addedViewers = getChanges(previous.portfolio_viewers.toString(), current.portfolio_viewers.toString());
    let emails = [];
    for (let i = 0; i < addedViewers.length; ++i) {
        const addedViewer = addedViewers[i];
        const gr = new GlideRecord('sys_user');
        gr.addQuery('sys_id', addedViewer);
        gr.query();
        while (gr.next()) {
            emails.push(gr.email);
        }
    }
    return gs.eventQueue('x_g_dis_atat.new_portfolio_viewer', current, emails);
})(current, previous);

function getChanges(oldList, newList) {
    const oldArray = oldList.split(',');
    const newArray = newList.split(',');
    return newArray.filter(function(item) {
        return !oldArray.includes(item);
    });
}]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>stephen.hayes</sys_created_by>
        <sys_created_on>2023-08-10 12:34:13</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>be04a4ca4764b110ee827d7ba26d4333</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>Portfolio Viewer Added</sys_name>
        <sys_overrides/>
        <sys_package display_value="ATAT" source="x_g_dis_atat">f600233d1b154d507b782f84604bcb12</sys_package>
        <sys_policy/>
        <sys_scope display_value="ATAT">f600233d1b154d507b782f84604bcb12</sys_scope>
        <sys_update_name>sys_script_be04a4ca4764b110ee827d7ba26d4333</sys_update_name>
        <sys_updated_by>stephen.hayes</sys_updated_by>
        <sys_updated_on>2023-08-10 12:37:25</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=be04a4ca4764b110ee827d7ba26d4333"/>
</record_update>
