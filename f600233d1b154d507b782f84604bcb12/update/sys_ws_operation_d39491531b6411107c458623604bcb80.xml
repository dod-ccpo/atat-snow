<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json,application/xml,text/xml</consumes>
        <consumes_customized>false</consumes_customized>
        <default_operation_uri/>
        <enforce_acl>cf9d01d3e73003009d6247e603f6a990</enforce_acl>
        <http_method>POST</http_method>
        <name>PDS</name>
        <operation_script><![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {
	var edaPds = new GlideRecord("x_g_dis_atat_environment_config");
	edaPds.get("name", "eda-pds");
	var requestBody = request.body.data;
	var payload = {
		endpoint: edaPds.endpoint,
		delivery_order_number: requestBody.delivery_order_number,
	};
	// Make GET request to endpoint
	var my_procurement_doc = edaPdsRequest(payload);
	
	// Check array of error messages created with .addErrorMessage
	// If there are any messages, return a 500 Internal Server Error
	if (gs.getErrorMessages(my_procurement_doc).length > 0){
		var pdsReqError = new sn_ws_err.ServiceError();
		pdsReqError.setMessage(gs.getErrorMessages(my_procurement_doc).toString());
		err.setDetail("Check System>System Logs>Errors for thrown error from edaPdsRequest");
		return pdsReqError;
	}
	var responseMessage = edaPdsResult(my_procurement_doc);
	if (gs.getErrorMessages(responseMessage).length > 0){
		var pdsResError = new sn_ws_err.ServiceError();
		pdsResError.setMessage(gs.getErrorMessages(responseMessage).toString());
		pdsResError.setDetail("Check System>System Logs>Errors for thrown error from edaPdsResult");
		return pdsResError;
	}
	
	return responseMessage;
})(request, response);]]></operation_script>
        <operation_uri>/api/x_g_dis_atat/eda/pds</operation_uri>
        <produces>application/json,application/xml,text/xml</produces>
        <produces_customized>false</produces_customized>
        <relative_path>/pds</relative_path>
        <request_example/>
        <requires_acl_authorization>true</requires_acl_authorization>
        <requires_authentication>false</requires_authentication>
        <requires_snc_internal_role>true</requires_snc_internal_role>
        <short_description/>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>zach.clark</sys_created_by>
        <sys_created_on>2022-07-12 20:56:08</sys_created_on>
        <sys_id>d39491531b6411107c458623604bcb80</sys_id>
        <sys_mod_count>3</sys_mod_count>
        <sys_name>PDS</sys_name>
        <sys_package display_value="ATAT" source="x_g_dis_atat">f600233d1b154d507b782f84604bcb12</sys_package>
        <sys_policy/>
        <sys_scope display_value="ATAT">f600233d1b154d507b782f84604bcb12</sys_scope>
        <sys_update_name>sys_ws_operation_d39491531b6411107c458623604bcb80</sys_update_name>
        <sys_updated_by>zach.clark</sys_updated_by>
        <sys_updated_on>2022-07-12 21:35:02</sys_updated_on>
        <web_service_definition display_value="EDA">841459131b6411107c458623604bcbcd</web_service_definition>
        <web_service_version/>
    </sys_ws_operation>
</record_update>
