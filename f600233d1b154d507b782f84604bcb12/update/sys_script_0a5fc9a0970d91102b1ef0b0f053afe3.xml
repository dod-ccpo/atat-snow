<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_g_dis_atat_acquisition_package</collection>
        <condition>previous.package_status == "DRAFT" &amp;&amp; current.package_status.changes()</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Pkg - Mission Owner status update</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	var acqPackage = "Acq. Package " + current.project_overview.title;
	acqPackage += " (" + current.number + ")";
	var user = gs.getUser().getDisplayName() + " (SysId: "+ gs.getUserID() + ")";
	
	// properties to help determine who has permissions
	var aclObject = {
		userSysId: gs.getUserID(),
		userRoles: gs.getUser().getRoles().toString().split(","), 
		accessList: current.mission_owners.toString().split(","),
		allowedRoles: ["x_g_dis_atat.hacc_admin"]
	};
	
	var allowedStatusUpdate = listContains(
		current.package_status, 
		["CANCELLED", "UNDER_REVIEW"]
	);
	var hasAccess = hasPermission(aclObject);

	if (hasAccess && allowedStatusUpdate) {
		var updateStatusMessage = acqPackage + " status has been updated to ";
		updateStatusMessage += current.package_status + ".";
		gs.info(updateStatusMessage);
	} else if (hasAccess && !allowedStatusUpdate) {
		var notAllowedMessage = "Updating to status " + current.package_status;
		notAllowedMessage += " is not allowed from " + previous.package_status;
		notAllowedMessage += ". Status reverted to " + previous.package_status;
		gs.addErrorMessage(notAllowedMessage);
		gs.warn(notAllowedMessage);
		current.package_status = previous.package_status;
	} else {
		var deniedMessage = user + " does not have permissions to update the ";
		deniedMessage += "current package. ";
		gs.addInfoMessage(deniedMessage);
		deniedMessage += "User is not allowed to update " + acqPackage + ". ";
		deniedMessage += "Action aborted. ";
		deniedMessage += "Attempated status change: " + previous.package_status + " ==> ";
		deniedMessage += current.package_status.toString() + ".";
		gs.warn(deniedMessage);
		current.setAbortAction(true);
	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>julius.fitzhugh-ctr</sys_created_by>
        <sys_created_on>2022-07-29 04:02:23</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>0a5fc9a0970d91102b1ef0b0f053afe3</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>Pkg - Mission Owner status update</sys_name>
        <sys_overrides/>
        <sys_package display_value="ATAT" source="x_g_dis_atat">f600233d1b154d507b782f84604bcb12</sys_package>
        <sys_policy/>
        <sys_scope display_value="ATAT">f600233d1b154d507b782f84604bcb12</sys_scope>
        <sys_update_name>sys_script_0a5fc9a0970d91102b1ef0b0f053afe3</sys_update_name>
        <sys_updated_by>julius.fitzhugh-ctr@ccpo.mil</sys_updated_by>
        <sys_updated_on>2022-07-29 21:21:43</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=0a5fc9a0970d91102b1ef0b0f053afe3"/>
</record_update>
