<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json,application/xml,text/xml</consumes>
        <consumes_customized>false</consumes_customized>
        <default_operation_uri/>
        <enforce_acl>cf9d01d3e73003009d6247e603f6a990</enforce_acl>
        <http_method>GET</http_method>
        <name>Get Data</name>
        <operation_script><![CDATA[(function process( /*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {
    try {
        if (!request.queryParams.packageId) {
            response.setStatus(400);
            response.setBody({
                "packageId": request.queryParams.packageId,
                "error_message": "query parameter packageId is required"
            });

        } else if (request.queryParams.packageId.toString().length != 32) {
            response.setStatus(400);
            response.setBody({
                "packageId": request.queryParams.packageId.toString(),
                "error_message": "query parameter packageId must be a 32 char sys_id"
            });
        } else {
            // Valid packageId
            var packageId = request.queryParams.packageId.toString();
            var AP_TABLE = "x_g_dis_atat_acquisition_package";
            var gr = new GlideRecord(AP_TABLE);
            gr.get(packageId);
            if (gr.isValidRecord()) { // FOUND
                var ce = new CostEstimate(gr);
                var data = ce.getData();
                response.setStatus(200);
                response.setBody({
                    "packageId": packageId,
                    "payload": data
                });
            } else { // NOT FOUND
                response.setStatus(404);
                response.setBody({
                    "packageId": packageId,
                    "error_message": "package not found"
                });
            }
        }
    } catch (error) {
        response.setStatus(400);
        response.setBody(error);
        var errUtil = new ErrorHandler();
        throw errUtil.createError(
            "Cost Estimate REST API --> Get Data resource: " + error,
            errUtil.METHOD_ERROR
        );
    }
})(request, response);]]></operation_script>
        <operation_uri>/api/x_g_dis_atat/cost_estimate/data</operation_uri>
        <produces>application/json,application/xml,text/xml</produces>
        <produces_customized>false</produces_customized>
        <relative_path>/data</relative_path>
        <request_example/>
        <requires_acl_authorization>true</requires_acl_authorization>
        <requires_authentication>true</requires_authentication>
        <requires_snc_internal_role>true</requires_snc_internal_role>
        <short_description/>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>jason.d.burkert.ctr@mail.mil</sys_created_by>
        <sys_created_on>2023-03-28 21:43:11</sys_created_on>
        <sys_id>62d293e297b52110cf3cfd9fe153af67</sys_id>
        <sys_mod_count>37</sys_mod_count>
        <sys_name>Get Data</sys_name>
        <sys_package display_value="ATAT" source="x_g_dis_atat">f600233d1b154d507b782f84604bcb12</sys_package>
        <sys_policy/>
        <sys_scope display_value="ATAT">f600233d1b154d507b782f84604bcb12</sys_scope>
        <sys_update_name>sys_ws_operation_62d293e297b52110cf3cfd9fe153af67</sys_update_name>
        <sys_updated_by>jason.d.burkert.ctr@mail.mil</sys_updated_by>
        <sys_updated_on>2023-05-02 19:43:56</sys_updated_on>
        <web_service_definition display_value="Cost Estimate">5a663ee697352110cf3cfd9fe153afe4</web_service_definition>
        <web_service_version/>
    </sys_ws_operation>
</record_update>
