<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json,application/xml,text/xml</consumes>
        <consumes_customized>false</consumes_customized>
        <default_operation_uri/>
        <enforce_acl>cf9d01d3e73003009d6247e603f6a990</enforce_acl>
        <http_method>GET</http_method>
        <name>Get Task Order Details</name>
        <operation_script><![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {
	var error = new sn_ws_err.ServiceError();

	// Ensure TO not already in use
	var toRecord = new GlideRecord("x_g_dis_atat_task_order");
	toRecord.addQuery("task_order_number", request.queryParams.taskOrderNumber);
	toRecord.query();
	if (toRecord.next()) {
		var message = "The given Task Order is already in use in a Portfolio";
		if (toRecord.portfolio) {
			message += " named " + toRecord.portfolio.name;			
		}
		return {
			code: "0001",
			message: message
		};
	}
	
	var acqPackage = new GlideRecord("x_g_dis_atat_acquisition_package");
	acqPackage.get(request.queryParams.acqusitionPackageSysId);
	var eda = new Eda();

	// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
	// CODE BELOW for testing only - remove when JWCC TOs are available in EDA GT environment
	// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
	var dummyRecord = new GlideRecord("x_g_dis_atat_dapps_dummy_data");
	if (request.queryParams.taskOrderNumber == "1000000000000") {
		dummyRecord.addQuery("name", "AWS");
		dummyRecord.query();
		dummyRecord.next();
		return eda.extractPdsSummary(request.queryParams.taskOrderNumber, dummyRecord.content);
	} 
	else if (request.queryParams.taskOrderNumber == "2000000000000") {
		dummyRecord.addQuery("name", "Azure");
		dummyRecord.query();
		dummyRecord.next();
		return eda.extractPdsSummary(request.queryParams.taskOrderNumber, dummyRecord.content);
	} 	
	else if (request.queryParams.taskOrderNumber == "3000000000000") {
		dummyRecord.addQuery("name", "GCP");
		dummyRecord.query();
		dummyRecord.next();
		return eda.extractPdsSummary(request.queryParams.taskOrderNumber, dummyRecord.content);
	} 	
	else if (request.queryParams.taskOrderNumber == "4000000000000") {
		dummyRecord.addQuery("name", "Oracle");
		dummyRecord.query();
		dummyRecord.next();
		return eda.extractPdsSummary(request.queryParams.taskOrderNumber, dummyRecord.content);
	} 	
	else if (request.queryParams.taskOrderNumber == "5000000000000") {
		dummyRecord.addQuery("name", "Non-JWCC");
		dummyRecord.query();
		dummyRecord.next();
		return eda.extractPdsSummary(request.queryParams.taskOrderNumber, dummyRecord.content);
	} 		
	// END EDA HARD-CODING
	
	// Make GET request to endpoint
	var my_procurement_doc = eda.pdsRequest(request.queryParams.taskOrderNumber);
	if (my_procurement_doc.error){
		if (my_procurement_doc.status_code == "204") {
			return {
				code: "0002",
				message: "Could not find given Task Order."
			};
		}
		else {		
			var pdsReqError = new sn_ws_err.ServiceError();
			pdsReqError.setMessage(my_procurement_doc.error);
			pdsReqError.setDetail("Check System>System Logs>Errors for thrown error from edaPdsRequest");
			return pdsReqError;			
		}

	}
	else{
		return eda.extractPdsSummary(request.queryParams.taskOrderNumber, my_procurement_doc.body);
		//return my_procurement_doc.body;
	}
	
})(request, response);]]></operation_script>
        <operation_uri>/api/x_g_dis_atat/provisioning</operation_uri>
        <produces>application/json,application/xml,text/xml</produces>
        <produces_customized>false</produces_customized>
        <relative_path>/</relative_path>
        <request_example/>
        <requires_acl_authorization>false</requires_acl_authorization>
        <requires_authentication>true</requires_authentication>
        <requires_snc_internal_role>true</requires_snc_internal_role>
        <short_description/>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>1370228783.CTR</sys_created_by>
        <sys_created_on>2023-01-23 22:23:16</sys_created_on>
        <sys_id>1946bd8edb64a918b1227ea5f396197f</sys_id>
        <sys_mod_count>21</sys_mod_count>
        <sys_name>Get Task Order Details</sys_name>
        <sys_package display_value="ATAT" source="x_g_dis_atat">f600233d1b154d507b782f84604bcb12</sys_package>
        <sys_policy/>
        <sys_scope display_value="ATAT">f600233d1b154d507b782f84604bcb12</sys_scope>
        <sys_update_name>sys_ws_operation_1946bd8edb64a918b1227ea5f396197f</sys_update_name>
        <sys_updated_by>1370228783.CTR</sys_updated_by>
        <sys_updated_on>2023-01-25 21:48:38</sys_updated_on>
        <web_service_definition display_value="Provisioning">4ba165cadb6c6918b1227ea5f39619e4</web_service_definition>
        <web_service_version/>
    </sys_ws_operation>
</record_update>
