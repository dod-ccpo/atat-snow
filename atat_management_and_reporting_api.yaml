openapi: 3.0.2
info:
  description: >-
    This is a DRAFT version of the ATAT Portfolio Management and Reporting API
  version: 1.0.0
  title: ATAT Internal API - Portfolio Management and Reporting
  contact:
    email: replaceme@ccpo.mil
tags:
  - name: management
    description: >-
      These operations are for management of Provisioned Portfolios. Provisioned Portfolios represent a collection of cloud computing resources already provisioned by a CSP.
  - name: reporting
    description: >-
      These operations return actual and forecast expenditure data for Provisioned Portfolios
paths:
  /portfolios/{portfolioId}/applications/{applicationId}/burndown:
    get:
      tags:
        - reporting
      description: Returns combined actual and forecast expenditure data for the given Application
      operationId: getApplicationBurndownData
      parameters:
        - name: portfolioId
          in: path
          description: ID of the Portfolio
          required: true
          schema:
            type: string
        - name: applicationId
          in: path
          description: ID of the Application
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationMonthlyBurndownData'
              examples:
                ApplicationMonthlyBurndownDataEx:
                  $ref: '#/components/examples/ApplicationMonthlyBurndownDataEx'
        '400':
          description: Invalid request parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Portfolio or Application with the given ID does not exist
components:
  responses:
    CorsHeaders:
      description: Default response for CORS method
      headers:
        Access-Control-Allow-Origin:
          schema:
            type: string
        Access-Control-Allow-Methods:
          schema:
            type: string
        Access-Control-Allow-Headers:
          schema:
            type: string
      content: {}
  x-amazon-apigateway-request-validator: "request-params-validator"
  x-amazon-apigateway-integration:
    httpMethod: "POST"
    uri:
      Fn::Sub: "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetApplicationBurndownData.Arn}/invocations"
    type: "aws_proxy"
  security:
    Fn::If:
      - IsAuthorizationRequired
      - 
        - cognitoAuthorizer: []
      - Ref: AWS::NoValue
  schemas:
    Error:
      type: object
      additionalProperties: false
      description: Generic error model
      properties:
        code:
          type: string
          enum: [INVALID_INPUT, OTHER]
        message:
          type: string
      required:
        - code
        - message
    ValidationError:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          additionalProperties: false
          required:
            - error_map
          properties:
            error_map:
              type: object
              description: 'Maps form input IDs to validation error messages so that clients can display in-line errors'
    MonthlyAvailableFunds:
      description: Represents the amount of available funds for a given month
      type: object
      additionalProperties: false
      properties:
        month:
          type: string
          example: "2019-09"
        funds:
          type: number
          example: 200000
    ApplicationMonthlyBurndownData:
      description: Combines actual and forecast available funds data for an Application by month.  Input for burndown chart.
      type: object
      additionalProperties: false
      properties:
        actual:
          type: array
          items:
            $ref: '#/components/schemas/MonthlyAvailableFunds'
        forecast:
          type: array
          items:
            $ref: '#/components/schemas/MonthlyAvailableFunds'
  examples:
    ApplicationMonthlyBurndownDataEx:
      value:
        actual:
          - month: "2019-09"
            funds: 200000
          - month: "2019-10"
            funds: 190000
          - month: "2019-11"
            funds: 175000
          - month: "2019-12"
            funds: 170000
          - month: "2020-01"
            funds: 150000
          - month: "2020-02"
            funds: 115000
          - month: "2020-03"
            funds: 95000
          - month: "2020-04"
            funds: 90000
          - month: "2020-05"
            funds: 75000
          - month: "2020-06"
            funds: 70000
          - month: "2020-07"
            funds: 50000
          - month: "2020-08"
            funds: 35000
        forecast:
          - month: "2020-09"
            funds: 30000
  securitySchemes:
    Fn::If:
      - IsAuthorizationRequired
      - cognitoAuthorizer:
          description: >-
            Authorizes API access by token. Token obtained from custom IdP and provided in subsequent API requests.
          type: apiKey
          name: Authorization
          in: header
          x-amazon-apigateway-authtype: cognito_user_pools
          x-amazon-apigateway-authorizer:
            type: cognito_user_pools
            providerARNs:
              - Fn::GetAtt: AtatUserPool.Arn
      - Ref: AWS::NoValue
