---
name: Build and Test API
on:
  pull_request:
  push:
    branches:
      - develop
      - main

jobs:
  assertPackageLockVersion:
    name: Ensure package-lock lockfileVersion has not changed
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      - name: Check package-lock.json
        run: |
          file="package-lock.json"
          expectedVersion="2"
          lockFileVersion="$(jq -r .lockfileVersion "$file")"
          if [ "$lockFileVersion" != "$expectedVersion" ]; then
            echo "$file: lockfileVersion ($lockFileVersion) is invalid (expected: $expectedVersion)"
            exit 1
          else
            echo "$file: lockfileVersion ($lockFileVersion) is the expected value ($expectedVersion)"
          fi
  cloudFormationSynth:
    name: Run CDK Synthesis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      - name: Setup NodeJS
        uses: actions/setup-node@v3.0.0
        with:
          node-version: "14"
          cache: npm
      - name: Install global dependencies
        run: |
          npm install -g aws-cdk
      - name: Install project dependencies
        run: |
          npm ci
      - name: Synthesize CDK template
        run: cdk synth
      - name: Gather CloudFormation artifacts
        uses: actions/upload-artifact@v2
        with:
          name: cloudformation-assets
          path: |
            cdk.out/*.template.json
            cdk.out/asset.*/index.js
  build:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup NodeJS
        uses: actions/setup-node@v3.0.0
        with:
          node-version: "14"
          cache: npm
      - name: Install global dependencies
        run: |
          npm install -g aws-cdk
      - name: Install project dependencies
        run: |
          npm ci
      - name: Lint the project
        run: npm run lint
      - name: Build the project
        run: npm run build
      - name: Run test suite
        run: npm test
        # This step will fail for external collaborators
      - name: Trigger SonarCloud
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
